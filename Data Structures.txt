Data Structures
================

A data structure is a specialized format for organizing, processing, retrieving and storing data. There are several basic and advanced types of data structures, all designed to arrange data to suit a specific purpose. 

Primitive data structures contain basic data types such as: Integer, Boolean, Float, etc.


while Non-primitive Data structures branch out to 2 paths:

1- Linear data structures: Arrays, Stacks, Linked Lists, Queue.

- Arrays: An array stores a collection of items at adjoining memory locations. Items that are the same type are stored together so the position of each element can be calculated or retrieved easily by an index. Arrays can be fixed or flexible in length.

- Stack: A stack stores a collection of items in the linear order that operations are applied. Mainly done as last in, First out order method.

- Queue: A queue stores a collection of items like a stack. However, the operation order is First in, First out.

- Linked list: A linked list stores a collection of items in a linear order. Each element, or node, in a linked list contains a data item, as well as a reference, or link, to the next item in the list.


2- Non-linear data structures: Tree, Graph, Trie, Hash Table.

- Tree A tree stores a collection of items in an abstract, hierarchical way. Each node is associated with a key value, with parent nodes linked to child nodes, or subnodes. There's one root node that is the ancestor of all the nodes in the tree. Moving down through such a tree structure, from the root node, to access all subsequent nodes is called traversal and can be done in a variety of orders, some of which can affect the performance of the tree.

- Heap: A heap is a tree-based structure in which each parent node's associated key value is greater than or equal to the key values of any of its children's key values.

- Graph: A graph stores a collection of items in a nonlinear fashion. Graphs are made up of a finite set of nodes, also known as vertices, and lines that connect them, also known as edges. These are useful for representing real-world systems such as computer networks.

- Trie: A trie, also known as a keyword tree, is a data structure that stores strings as data items that can be organized in a visual graph.

- Hash Table: A hash table -- also known as a hash map -- stores a collection of items in an associative array that plots keys to values. A hash table uses a hash function to convert an index into an array of buckets that contain the desired data item. Hashing serves up a complexity of its own with a collision â€“ two keys resulting in the same value, where a new key maps to an already-occupied location in the table. Chaining resolves this by generating a local linked list to store each of the elements hashed into the same location.

